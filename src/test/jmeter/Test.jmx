<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </Arguments>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <intProp name="HTTPSampler.connect_timeout">30000</intProp>
        <intProp name="HTTPSampler.response_timeout">20000</intProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group-1">
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <intProp name="ThreadGroup.num_threads">5</intProp>
        <intProp name="ThreadGroup.ramp_time">5</intProp>
        <longProp name="ThreadGroup.duration">60</longProp>
        <longProp name="ThreadGroup.delay">1</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <intProp name="calcMode">2</intProp>
          <doubleProp>
            <name>throughput</name>
            <value>30000.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <intProp name="HTTPSampler.connect_timeout">30000</intProp>
          <stringProp name="HTTPSampler.domain">edge-cloudflare-apprint.zimperium-dev.workers.dev</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/apprint/api/v1/app-scan-results/batch-read</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;rid&quot;: &quot;${__RandomString(12,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}&quot;, &quot;zdb&quot;: 231, &quot;cogito&quot;: 21, &quot;releaseLevel&quot;:&quot;prod&quot;, &quot;sdkVersion&quot;:&quot;5.1.13&quot;, &quot;apps&quot;: [&#xd;
            &quot;${__RandomString(64,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}&quot;,&#xd;
            &quot;${__RandomString(64,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}&quot;,&#xd;
            &quot;${__RandomString(64,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}&quot;,&#xd;
            &quot;${__RandomString(64,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}&quot;,&#xd;
            &quot;${__RandomString(64,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}&quot;,&#xd;
            &quot;t01x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;,&#xd;
            &quot;t02x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;,&#xd;
            &quot;t03x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;,&#xd;
            &quot;t04x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;,&#xd;
            &quot;t05x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;,&#xd;
            &quot;t06x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;,&#xd;
            &quot;t07x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;,&#xd;
            &quot;t08x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;,&#xd;
            &quot;t09x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;,&#xd;
            &quot;t10x2be3a500d08fb39a7699be2aa69498a56372e7296b7052e12313cb80a8fd&quot;&#xd;
            ]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjQ3OTgxMzU2MTcsInJldiI6MywiY3VzdG9tZXIiOnsiaWQiOiIxNjQ2ZmVmYS1lNGE3LTRjOTEtYjc3Yy0xNmRkMzg4Yjk3YzgiLCJzeXN0ZW1fdG9rZW4iOiJ1cGdyYWRldGVzdGluZzQzOCJ9LCJ1c2VyIjp7ImlkIjoiYTI3MmRlM2YtNDlkYy00MWU1LWEwMTEtMjc4Yzk0OTg2YjUxIiwiZmlyc3RfbmFtZSI6ImFub255bW91cyIsImxhc3RfbmFtZSI6InVzZXIiLCJlbWFpbCI6InVwZ3JhZGV0ZXN0aW5nNDM4LWdkcHItdXNlckB6aW1wZXJpdW0uY29tIiwidWdyb3VwX2lkIjpudWxsLCJ1Z3JvdXBfbmFtZSI6IkRlZmF1bHQgR3JvdXAiLCJyb2xlIjoxfSwiZGV2aWNlIjp7ImlkIjoiNTJmYjcyOGEtMGRhZi00NWJiLTlmOTUtN2M2YTQyZDk4MjA1IiwiZGV2aWNlX2hhc2giOiI4MmRkNDExNjU3NzQ4NTY3NDlkYzQxZjc1ZWNiMzk0YWQxYjY4ZTIxMzRhNzJkNWIzMTk0NGQzMTQ5NmM2IiwiZGV2aWNlX2lkIjoiOGI5NmI2NDUtY2E3ZS00MWE2LTllZDItMTA5MjAxNTljYmQ5IiwibWRtX2RldmljZV9pZCI6bnVsbCwibWRtX2RldmljZV9hbHRfaWQiOm51bGwsIm1kbV9kZXZpY2VfYWx0X2lkMiI6bnVsbCwibWRtX2Nvbm5lY3Rpb25faWQiOm51bGwsIm9zIjp7ImlkIjoiMSIsIm5hbWUiOiJpT1MiLCJzZWN1cml0eV9wYXRjaCI6bnVsbCwiYnVpbGQiOm51bGx9LCJncm91cCI6eyJpZCI6ImJmZjlhY2Q1LTczZWItNDgyNy05ZmM5LWNmNjk1NDdiMTI1OCIsIm5hbWUiOiJjaHJvbWVib29rIn19LCJhcHAiOnsiaWQiOiJkODg5MGY5YS04OTg5LTQwOGUtOTdlNS04OTEwZWJhZTUzMDkiLCJhcHBfbmFtZSI6IlRlc3QgQXBwIiwiYnVuZGxlX2lkIjoiY29tLnppbXBlcml1bS56SVBTIiwiel92ZXJzaW9uIjoiNC4xNC4wIiwiel9idWlsZCI6bnVsbCwiYWdlbnRfdHlwZSI6MiwiZXh0ZXJuYWxfdHJhY2tpbmdfaWQxIjoiIiwiZXh0ZXJuYWxfdHJhY2tpbmdfaWQyIjoiIn0sImZlYXR1cmVzIjpbInBoaXNoaW5nIiwicGhpc2hpbmdfcmVtb3RlIiwicGhpc2hpbmdfbG9jYWwiXSwicGhpc2hpbmdfdGhyZXNob2xkIjo3NX0.MB8bKWumRWkkGonjtQSdPk9BnAhXeUhHmDjEV6s3xW4</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <JSR223Listener guiclass="TestBeanGUI" testclass="JSR223Listener" testname="JSR223 Listener" enabled="false">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import java.util.concurrent.atomic.AtomicLong;

if (!vars.getObject(&quot;requestCount&quot;)) {
    vars.putObject(&quot;requestCount&quot;, new AtomicLong(0));
    vars.putObject(&quot;startTime&quot;, System.currentTimeMillis());
}

AtomicLong requestCount = vars.getObject(&quot;requestCount&quot;);
long elapsedTime = System.currentTimeMillis() - vars.getObject(&quot;startTime&quot;);
log.info(&quot;Elapsed  Time: ${elapsedTime} Arrivals - ${requestCount.get()}&quot;);
// Avoid division by zero
if (elapsedTime &gt; 0) {
    requestCount.incrementAndGet();
    double arrivalRate = (requestCount.get() / (elapsedTime / 1000.0)); // requests per second
    log.info(&quot;Arrival Rate: ${arrivalRate} requests/second&quot;);
} else {
	requestCount.incrementAndGet();
    log.warn(&quot;Elapsed time is too small to calculate arrival rate.&quot;);
}
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Listener>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="false"/>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="2089583836">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2|svg)</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="954035798">.*google\.com.*</stringProp>
          <stringProp name="-1013020510">chat.google.com</stringProp>
          <stringProp name="-1760706809">signaler-pa.clients6.google.com</stringProp>
          <stringProp name="-1839614776">firestore.googleapis.com</stringProp>
          <stringProp name="-806864575">stocks-data-service.apple.com</stringProp>
          <stringProp name="817323548">www.googleapis.com</stringProp>
          <stringProp name="298166557">.*googleapis\.com.*</stringProp>
          <stringProp name="-1527911145">.*slack\.com.*</stringProp>
          <stringProp name="-2056154611">.*apple\.com.*</stringProp>
          <stringProp name="586390675">.*\.sentinelone\.net.*</stringProp>
          <stringProp name="-1225571604">https://usea1-s1sy.sentinelone.net</stringProp>
          <stringProp name="1329531517">https://dv-us-prod.sentinelone.net</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
